<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Store">

    <!-- 4S店实体 -->
    <resultMap type="Store"  id="store" >
        <id property="storeId" column="storeId" javaType="java.lang.String" />
        <result property="parentStoreId" column="parentStoreId" javaType="java.lang.String" />
        <result property="storeName" column="storeName" javaType="java.lang.String" />
        <result property="phone" column="phone" javaType="java.lang.String" />
        <result property="phone2" column="phone2" javaType="java.lang.String" />
        <result property="contact" column="contact" javaType="java.lang.String" />
        <result property="storeCert" column="storeCert" javaType="java.lang.String" />
        <result property="alipay" column="alipay" javaType="java.lang.String" />
        <result property="tenpay" column="tenpay" javaType="java.lang.String" />
        <result property="isOfflineStore" column="isOfflineStore" javaType="java.lang.Integer" />
        <result property="country" column="country" javaType="java.lang.String" />
        <result property="province" column="province" javaType="java.lang.String" />
        <result property="city" column="city" javaType="java.lang.String" />
        <result property="district" column="district" javaType="java.lang.String" />
        <result property="detailAddress" column="detailAddress" javaType="java.lang.String" />
        <association property="user"  column="storeId"  resultMap="User.user"> </association>
    </resultMap>

	<!--<resultMap type="Trip"  id="trip" >
		<id property="id" column="id" javaType="java.lang.String" />
		<result property="companyId" column="company_id" javaType="java.lang.String" />
		<result property="name" column="name" javaType="java.lang.String" />
		<result property="description" column="description" javaType="java.lang.String" />
		<result property="pic" column="pic" javaType="java.lang.String" />
		<result property="days" column="days" javaType="java.lang.Integer" />
		<result property="parentId" column="parent_id" javaType="java.lang.String" />
		<result property="version" column="version" javaType="java.lang.Integer" />
		<result property="createTime" column="createTime" javaType="java.util.Date" />
		<collection property="tripDays" ofType="TripDay" resultMap="tripDay"></collection>
	</resultMap>
	
	<resultMap type="TripDay"  id="tripDay" >
		<id property="id" column="id" javaType="java.lang.String" />
		<result property="tripId" column="trip_id" javaType="java.lang.String" />
		<result property="title" column="title" javaType="java.lang.String" />
		<result property="day" column="day" javaType="java.lang.Integer" />
		<result property="city1" column="city1" javaType="java.lang.String" />
		<collection property="tripPlans"  ofType="TripPlan" resultMap="tripPlan"></collection>
	</resultMap>
	
	<resultMap type="TripPlan"  id="tripPlan" >
		<id property="id" column="plan_id" javaType="java.lang.String" />
		<result property="type" column="type" javaType="java.lang.Integer" />
		<result property="dayId" column="day_id" javaType="java.lang.String" />
		<result property="geom" column="geom" javaType="java.lang.String" />
		<result property="startTime" column="startTime" javaType="java.lang.String" />
		<result property="description" column="description" javaType="java.lang.String" />
		<result property="title" column="ptitle" javaType="java.lang.String" />
		<result property="address" column="address" javaType="java.lang.String" />
		&lt;!&ndash; <association property="tripDay"  column="day_id"  resultMap="tripDay"> </association> &ndash;&gt;
	</resultMap>
	
	<resultMap type="TeamGuide" id="teamGuide">
        <id property="guideId" column="guide_id" javaType="java.lang.String" />  
        <result property="teamId" column="team_id" javaType="java.lang.String"/> 
        <result property="createTime" column="createTime" javaType="java.util.Date"/>
        <association property="guide"  column="guide_id"  resultMap="User.guide"> </association>
	</resultMap>
	
	<resultMap type="TripTeam"  id="tripTeam" >
		<id property="id" column="id" javaType="java.lang.String" />
		<result property="tripId" column="trip_id" javaType="java.lang.String" />
		<result property="companyId" column="company_id" javaType="java.lang.String" />
		<result property="companyName" column="company_name" javaType="java.lang.String" />
		<result property="reward" column="reward" javaType="java.lang.Integer" />
		<result property="count" column="count" javaType="java.lang.Integer" />
		<result property="code" column="code" javaType="java.lang.String" />
		<result property="date" column="date" javaType="java.lang.String" />
		<result property="comments" column="iscomment" javaType="java.lang.Integer" />
		<result property="createTime" column="createTime" javaType="java.util.Date" />
		<association property="trip"  column="trip_id"  resultMap="trip"> </association>
		<collection property="teamGuides" ofType="TeamGuide" resultMap="teamGuide"></collection>
	</resultMap>
	
	<resultMap type="com.mapabc.newland.core.vo.TeamAppUserExtend"  id="teamAppUserExtend" >
		<id property="tripTeamId" column="tripteam_id" javaType="java.lang.String" />
		<result property="appUserCount" column="appusercount" javaType="java.lang.Integer" />
	</resultMap>
	
	<resultMap type="com.mapabc.newland.core.vo.TripHistoryExtend"  id="tripHistoryExtend" >
		<id property="tripTeamId" column="team_id" javaType="java.lang.String" />
		<result property="name" column="name" javaType="java.lang.String" />
		<result property="createTime" column="team_createTime" javaType="java.util.Date" />
		<result property="code" column="code" javaType="java.lang.String" />
		<result property="date" column="date" javaType="java.lang.String" />
		<result property="tripId" column="trip_id" javaType="java.lang.String" />
		<result property="tripCreateTime" column="trip_createTime" javaType="java.util.Date" />
		<result property="version" column="version" javaType="java.lang.Integer" />
		<collection property="guides"  resultMap="tripTeamGuideExtend" ></collection>
	</resultMap>
	
	<resultMap type="com.mapabc.newland.core.vo.TripTeamGuideExtend" id="tripTeamGuideExtend">
		<id property="guideId" column="guide_id" javaType="java.lang.String" />
		<result property="realName" column="realname" javaType="java.lang.String" />
	</resultMap>
	
	<resultMap type="VersionLink" id="versionLink">
		<id property="oldId" column="old_id" javaType="java.lang.String" />
		<result property="newId" column="new_id" javaType="java.lang.String" />
		<result property="tripId" column="trip_id" javaType="java.lang.String" />
	</resultMap>
	
	&lt;!&ndash; Save SQL Script &ndash;&gt;
	&lt;!&ndash; 保存旅行团 &ndash;&gt;
	<insert id="saveTrip" parameterType="Trip">
		insert into
		trip(id, company_id, name, description, pic, days, parent_id, version, createTime) values (
		#{id}, #{companyId}, #{name}, #{description}, #{pic}, #{days}, #{parentId}, #{version}, #{createTime})
	</insert>
	&lt;!&ndash; 保存旅行日程 &ndash;&gt;
	<insert id="saveTripDay" parameterType="TripDay">
		insert into
		trip_day(id, trip_id, title, day, city1) values (
		#{id}, #{tripId}, #{title}, #{day}, #{city1})
	</insert>
	
	<insert id="saveTripDayBatch"  parameterType="java.util.List">  
   	 	insert into trip_day(id, trip_id, title, day, city1) values 
	    <foreach collection="tripDays" item="tripDay"  index="index"  separator="," >  
	        (#{tripDay.id}, #{tripDay.tripId}, #{tripDay.title}, #{tripDay.day}, #{tripDay.city1})  
	    </foreach>  
	</insert>
	
	&lt;!&ndash; 保存旅行日程计划 &ndash;&gt;
	<insert id="saveTripPlan" parameterType="TripPlan">
		insert into
		trip_plan(plan_id, type, day_id, geom, startTime, description, ptitle, address) values 
		(#{id}, #{type}, #{dayId}, #{geom}, #{startTime}, #{description}, #{title}, #{address})
	</insert>
	<insert id="saveTripPlanBatch"  parameterType="java.util.List">  
   	 	insert into trip_plan(plan_id, type, day_id, geom, startTime, description, ptitle, address) values
	    <foreach collection="tripPlans" item="tripPlan"  index="index"  separator="," >  
	        (#{tripPlan.id}, #{tripPlan.type}, #{tripPlan.dayId}, #{tripPlan.geom}, #{tripPlan.startTime}, 
	        	#{tripPlan.description}, #{tripPlan.title}, #{tripPlan.address})  
	    </foreach>  
	</insert>
	
	&lt;!&ndash; 保存旅行团 &ndash;&gt;
	<insert id="saveTripTeam" parameterType="TripTeam">
		insert into
		trip_team(id, trip_id, company_id, reward, count, date, code, createTime) 
		values (#{id}, #{tripId}, #{companyId}, #{reward}, #{count}, #{date}, #{code}, #{createTime})
	</insert>
	<insert id="saveTeamGuide"  parameterType="TeamGuide">
		insert into team_guide(team_id, guide_id, createTime) values(#{teamId}, #{guideId}, #{createTime})
	</insert>
	
	&lt;!&ndash; Update SQL Script &ndash;&gt;
	<update id="updateTrip" parameterType="Trip">
		update trip set name = #{name}, description = #{description}, pic = #{pic}, days = #{days}  
		where id = #{id}
	</update>
	<update id="updateTripDay" parameterType="TripDay">
		update trip_day set title = #{title}, day = #{day}, city1 = #{city1} where id = #{id}
	</update>
	
	<update id="updateTripDayDays">
		<choose>
			<when test="type != null  and type != ''">
				update trip_day set  day = day - 1 where trip_id = #{tripId} and day &gt; #{day}
			</when>
			<otherwise>
				update trip_day set  day = day + 1 where trip_id = #{tripId} and day &gt;= #{day}
			</otherwise>			
		</choose>
	</update>
	
	&lt;!&ndash; 保存旅行团 &ndash;&gt;
	<update id="updateTripTeam" parameterType="TripTeam">
			update trip_team
			set count = #{count}, date = #{date},  reward = #{reward}, count = #{count}
			where id = #{id}
	</update>
	
	<update id="updateTripPlan" parameterType="TripPlan">
		update trip_plan set type = #{type}, geom = #{geom}, startTime = #{startTime}, 
		description = #{description}, ptitle = #{title}, address = #{address} 
		where plan_id = #{id}
	</update>
	
	&lt;!&ndash; Delete SQL Script &ndash;&gt;
	<delete id="deleteTripPlan">
		delete from trip_plan where plan_id = #{id}
	</delete>
	<delete id="deleteTripPlanByDay">
		delete from trip_plan where day_id = #{dayId}
	</delete>
	<delete id="deleteTripDay">
		delete from trip_day where id = #{id}
	</delete>
	<delete id="deleteTripDayByTrip">
		delete from trip_day where trip_id = #{tripId}
	</delete>
	<delete id="deleteTrip">
		delete from trip where id = #{id}
	</delete>
	<delete id="deleteTripTeam">
		delete from trip_team where id = #{id}
	</delete>
	<delete id="deleteTripTeamByTrip">
		delete from trip_team where trip_id = #{tripId}
	</delete>
	<delete id="deleteTripTeamTourist">
		delete from tourist_tripteam where
		<if test="touristId != null and touristId != '' ">  
	         tourist_id = #{touristId} and 
	    </if> 
		  tripteam_id = #{tripteamId}
	</delete>
	<delete id="deleteTripTeamGuide">
		delete from team_guide where 
		<if test="guideId != null and guideId != '' ">  
	         guide_id = #{guideId} and 
	    </if> 
	    team_id = #{tripTeamId}
	</delete>
	
	&lt;!&ndash; Query SQL Script &ndash;&gt;
	<select id="queryTripById"  resultMap="trip">
		select * from trip where id = #{tripId}
	</select>
	&lt;!&ndash; 查询公司旅行 &ndash;&gt;
	<select id="queryTripByCompanyId" parameterType="java.lang.String" resultType="Trip">
		select tt.* from (select t1.*, ifnull(t2.id, t1.id)as id2 from trip t1 left join trip t2 on t1.parent_id = t2.id
		where (t1.name like "%"#{search}"%" or t1.description like "%"#{search}"%") and  t1.company_id = #{companyId} 
		order by t1.version desc) tt group by tt.id2
		order by tt.createTime desc		
	</select>
	
	<select id="queryTripHistory"  resultMap="tripHistoryExtend">
		select t.id as trip_id, t.name, t.version, t.createTime as trip_createTime, tt.id as team_id, tt.code, tt.date, tt.createTime as team_createTime, u.id as guide_id, u.realname 
		from trip t left join trip_team tt on t.id = tt.trip_id inner join team_guide tg on tt.id = tg.team_id inner join user u on tg.guide_id = u.id 
		where t.id = #{tripId} or t.parent_id = #{tripId} order by t.version desc, team_createTime desc
	</select>
	
	<select id="queryTripMaxVersion"  resultMap="trip">
		select t1.* from trip t1 left join trip t2 on t1.parent_id = t2.id inner join (select ifnull(parent_id, id) as parent_id from trip where id = #{tripId}) t3
		where t2.id = t3.parent_id or t1.id = t3.parent_id
		order by t1.version desc limit 1
	</select>
	
	<select id="queryTripDayById" resultMap="tripDay">
		select * from trip_day where id= #{id}
	</select>
	<select id="queryTripDayByTrip" resultMap="tripDay">
		select * from trip_day 
		where day >= #{day} and  trip_id= #{tripId}
	</select>
	<select id="queryTripDaysByTrip"  resultMap="tripDay">
		select d.*, p.*  from trip_day d left join trip_plan p on d.id = p.day_id 
		where d.trip_id = #{tripId} 
		order by d.day, p.startTime asc
	</select>
	<select id="queryTripDayMaxDay" resultType="java.lang.Integer">
		select ifnull(max(day), 0) from trip_day where trip_id= #{tripId}
	</select>
	
	<select id="queryTripDayByDay" resultMap="tripDay">
		select * from trip_day where trip_id = #{tripId} and day = #{day}
	</select>
	
	<select id="queryTripPlanById" resultMap="tripPlan">
		select * from trip_plan where plan_id = #{tripPlanId}
	</select>
	
	<select id="queryTripTeamByCode" resultMap="tripTeam">
		select t.*, tg.*  from trip_team t left join team_guide tg on t.id = tg.team_id 
		where t.code = #{code}
	</select>
	
	<select id="queryTripTeamDetailById" resultMap="tripTeam">
		select tt2.*, ut.gender, ut.realname , ut.avgscore, ut.commentcount, ut.leadcount from 
		(select u.id, u.gender, u.realname , g.avgscore, g.commentcount, g.leadcount from user u inner join guide g on u.id = g.id) ut 
		inner join 
		(select t.name, t.pic, t.days, t.description, t.company_id,tt1.id, tt1.code, tt1.count, tt1.date, tt1.guide_id,tt1.reward,tt1.trip_id from trip t inner join 
		(select tt.id, tt.code, tt.count, tt.date, tt.reward, tt.trip_id, tg.guide_id from trip_team tt inner join team_guide tg on tt.id = tg.team_id 
		where tt.id = #{id}) tt1 
		on t.id = tt1.trip_id ) tt2 on ut.id = tt2.guide_id;
	</select>
	
	<select id="queryTripTeamById" resultMap="tripTeam">
		select tt.*, t.name, t.days, t.company_id, t.description, t.pic from trip_team tt inner join trip t on tt.trip_id = t.id  where tt.id = #{tripTeamId}
	</select>
	
	<select id="queryTripTeam" resultMap="tripTeam">
   		<if test="guideName != null and guideName != '' ">  
   			select ct.* from (
   				select team_id from team_guide tg inner join user u on tg.guide_id = u.id 
   				where u.realname like "%"#{guideName}"%")tgu inner join (
   		</if>   
   		select tt.*,t.name,t.days, t.pic from trip_team tt  inner join trip t on t.id=tt.trip_id where
   		<if test="tripName != null and tripName != '' ">  
	        t.name like "%"#{tripName}"%" and 
	    </if>  
	    <if test="type != null and type != ''  and type != 0">  
	        <choose>
	        	<when test="type==2">
	        		tt.date &gt; curdate() and 
	        	</when>
	        	<when test="type==3">
	        		date_add(tt.date, INTERVAL t.days - 1 day) &lt; curdate() and 
	        	</when>
	        	<otherwise>
	        		 date_add(tt.date, INTERVAL t.days - 1 day) &gt;= curdate()  and  tt.date &lt;= curdate() and 
	        	</otherwise>
	        </choose>
	    </if>  
   		tt.company_id = #{companyId} 
   		<choose>
   			<when test="guideName != null and guideName != '' ">
   				) ct on  tgu.team_id = ct.id order by 
   				<if test="orderType != null and orderType != '' and orderType != 0">
   					<choose>
	   					<when test="orderType==2" >
   							ct.count desc, 
   						</when>
   						<when test="orderType==3" >
   							ct.count asc, 
   						</when>
	   					<otherwise>
	   						ct.date desc, 
	   					</otherwise>
   					</choose>
   				</if>
   				ct.createTime desc
   			</when>
   			<otherwise>
   				order by 
   				<if test="orderType != null and orderType != ''  and orderType != 0">
	   				<choose>
	   					<when test="orderType==2" >
	   						tt.count desc, 
	   					</when>
	   					<when test="orderType==3" >
	   						tt.count asc, 
	   					</when>
	   					<otherwise>
	   						tt.date desc, 
	   					</otherwise>
	   				</choose>
   				</if>
   				tt.createTime desc
   			</otherwise>
   		</choose>
	</select>
	
	<select id="queryTripTeamByTripId" resultMap="tripTeam">
		select tt.* from trip_team tt where tt.trip_id = #{tripId}
	</select>
	
	<select id="queryTripTeamByUserId" resultMap="tripTeam">
		SELECT tt.id,tt.date,tt.reward,tt.count,tt.code,tp.id as trip_id,tp.name,tp.createTime,tp.days,tp.company_id,tp.pic,(select count(*) from report r where r.team_id=tt.id and user_id=#{userId}) as iscomment FROM tourist_tripteam t inner join trip_team tt on t.tripteam_id=tt.id inner join trip tp on tp.id=tt.trip_id  where tourist_id=#{userId}  order by tt.date desc
	</select>
	
	<select id="queryTripTeamByGuideId" resultMap="tripTeam">
		SELECT tt.id,tt.date,tt.reward,tt.count,tt.code,tp.id as trip_id,tp.name,tp.createTime,tp.days,tp.company_id,tp.pic,u.realname as company_name FROM team_guide t inner join trip_team tt on t.team_id=tt.id inner join trip tp on tp.id=tt.trip_id inner join user u on u.id=tp.company_id  where guide_id=#{guideId} order by tt.date desc
	</select>
	
	<select id="queryGuidesByIds" resultMap="teamGuide">
		SELECT tg.team_id,u.* FROM team_guide tg left join user u on tg.guide_id=u.id where tg.team_id in 
		 <foreach item="item" index="index" collection="teamIds" 
                         open="(" separator="," close=")">
                        #{item}
         </foreach>
	</select>
	
	<select id="queryTripTeamByIds" resultMap="tripTeam">
		SELECT t.*,tp.name,tp.days FROM trip_team t inner join trip tp on tp.id=t.trip_id where t.id in
		<foreach item="id" index="index" collection="ids" 
                         open="(" separator="," close=")">
                        #{id}
         </foreach>
	</select>
	
	<select id="queryTripTeamByRealNameIDCard" resultMap="tripTeam">
		select * from trip_team t1 inner join (
		select * from tourist_tripteam tt inner join user u on tt.tourist_id = u.id where 
		<choose>
			<when test="realName != null and realName != '' ">  
		         t.realname = #{realName}  and  right(u.idcard, 6) = #{idCard}) 
		    </when>
		    <otherwise>
		    	t.idcard = #{idCard} 
		    </otherwise>
		</choose>
		) t2 on t1.id = t2.tripteam_id order by t1.createTime desc
	</select>
	
	<select id="queryTripTeamsByTimeAndUser" resultMap="tripTeam">
		select tm.id,tm.code,tm.count,tm.date,tm.trip_id,tp.name,tp.pic,tp.days from trip_team tm INNER JOIN trip tp on tm.trip_id=tp.id inner join tourist_tripteam ttt on ttt.tripteam_id=tm.id where DATE_ADD(STR_TO_DATE(tm.date,'%Y-%m-%d'),INTERVAL tp.days DAY)>SYSDATE() and ttt.tourist_id=#{userId} ORDER BY STR_TO_DATE(tm.date,'%Y-%m-%d') limit 1
	</select>
	
	<select id="queryTripTeamAppUser"  resultMap="teamAppUserExtend">
		select tt.tripteam_id, count(ut.id) as appusercount from 
		(select tt1.* from tourist_tripteam tt1 inner join trip_team tt2 on tt1.tripteam_id = tt2.id 
		where tt2.company_id = #{companyId}) tt  inner join 
		(select u.id from user u inner join tourist t on u.id = t.id where appuser = 1) ut 
		on ut.id = tt.tourist_id group by tt.tripteam_id	
	</select>
	
	<select id="queryGuideStatus" resultType="string">
	select tg.guide_id from team_guide tg INNER JOIN trip_team tt on tg.team_id=tt.id inner join trip t on tt.trip_id=t.id where DATE_ADD(STR_TO_DATE(tt.date,'%Y-%m-%d'),INTERVAL t.days DAY)>SYSDATE() and <![CDATA[ SYSDATE()>STR_TO_DATE(tt.date,'%Y-%m-%d') ]]> 
	and  tg.guide_id in 
	<foreach item="item" index="index" collection="list" 
                         open="(" separator="," close=")">
                        #{item.guideId}
         </foreach>
	</select>
	
	<insert id="saveVersionLink" parameterType="VersionLink">
		insert into version_link(old_id, new_id, trip_id) values(#{oldId}, #{newId}, #{tripId})
	</insert>
	
	<insert id="saveVersionLinkBatch"  parameterType="java.util.List">  
   	 	insert into version_link(old_id, new_id, trip_id) values
	    <foreach collection="versionLinks" item="versionLink"  index="index"  separator="," >  
	       (#{versionLink.oldId}, #{versionLink.newId}, #{versionLink.tripId})  
	    </foreach>  
	</insert>
	
	<select id="queryVersionLink" resultMap="versionLink">
		select * from version_link where 
		<if test="oldId != null and oldId != ''">
			old_id = #{oldId} and
		</if>
		trip_id = #{tripId}
	</select>
	
	<delete id="deleteVersionLinkByTrip">
		delete from version_link where trip_id = #{tripId}
	</delete>-->
</mapper>
