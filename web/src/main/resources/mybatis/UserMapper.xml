<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"

"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">
	
	<!-- 用户实体 -->
	<resultMap type="User"  id="user" >
		<id property="userId" column="userId" javaType="java.lang.String" />
		<result property="username" column="username" javaType="java.lang.String" />
		<result property="password" column="password" javaType="java.lang.String" />
		<result property="email" column="email" javaType="java.lang.String" />
		<result property="phone" column="phone" javaType="java.lang.String" />
		<result property="avatar" column="avatar" javaType="java.lang.String" />
		<result property="qq" column="qq" javaType="java.lang.String" />
        <result property="weibo" column="weibo" javaType="java.lang.String" />
        <result property="weixin" column="weixin" javaType="java.lang.String" />
		<result property="createTime" column="createTime" javaType="java.util.Date" />
		<result property="updateTime" column="updateTime" javaType="java.util.Date" />
	</resultMap>
	
	<!-- 旅行社实体 -->
	<resultMap type="UserInfo"  id="userInfo" >
		<id property="userInfoId" column="userInfoId"  javaType="java.lang.String" />
		<result property="realName" column="realName" javaType="java.lang.String" />
		<result property="signature" column="signature" javaType="java.lang.String" />
		<result property="birthday" column="birthday" javaType="java.lang.String" />
		<result property="sex" column="sex" javaType="java.lang.Integer" />
		<result property="nickName" column="nickName" javaType="java.lang.String" />
        <result property="enName" column="enName" javaType="java.lang.String" />
        <result property="level" column="level" javaType="java.lang.Integer" />
        <result property="totalPraise" column="totalPraise" javaType="java.lang.Integer" />
        <result property="totalMount" column="totalPraise" javaType="java.lang.Double" />
        <result property="totalScore" column="totalScore" javaType="java.lang.Integer" />
		<association property="user"  column="userInfoId"  resultMap="user"> </association>
	</resultMap>
	


	<insert id="saveUser" parameterType="User">
		insert into
		user(id, username, password, email, phone, realname, avatar, idcard, gender, createTime, token, token_expired, remark,pic_url) values (
		#{id}, #{userName}, #{password}, #{email}, #{phone}, #{realName}, #{avatar}, #{idCard}, #{gender}, #{createTime}, #{token}, #{tokenExpired}, #{remark},#{picUrl})
	</insert>
	
	<update id="updateUser" parameterType="User">
		update user  set 
		username = #{userName},
		email = #{email},
		phone = #{phone},
		realname = #{realName},
		avatar = #{avatar},
		idcard = #{idCard},
		gender = #{gender},
		remark = #{remark},
		pic_url = #{picUrl}
		where id = #{id}
	</update>
	
	<update id="changePassword">
		update user set password = #{password} where id = #{userId}
	</update>
	
	
	<update id="updateToken" parameterType="User">
		update user set token = #{token},token_expired=#{tokenExpired} where id=#{id}
	</update >
	
	<delete id="deleteUser" >
		delete from user where id = #{userId}
	</delete>
	
	<select id="queryUserById"  resultMap="user">
		select *  from user u where u.id=#{userId}
	</select>
	
	<select id="queryUserByUserName"  resultMap="user">
		select *  from user u where u.username=#{userName}
	</select>
	
	<select id="queryGuideByUserName"  resultMap="user">
		select *  from user u where u.username=#{userName}
	</select>
	
	<select id="queryUserByEmail"  resultMap="user">
		select *  from user u where u.email=#{email}
	</select>
	
	<select id="queryUserByPhone"  resultMap="user">
		select *  from user u where u.phone=#{phone}
	</select>
	
	
	<select id="queryUserByToken"  resultMap="user">
		select *  from user u where u.token=#{token} and u.token_expired>#{time}
	</select>
	
	<select id="queryUser"  resultMap="user">
		select *  from user where  
		<choose>
			<when test="realName != null and realName != '' ">
				realname = #{realName} and right(idcard, 6) = #{idCard}
			</when>
			<otherwise>
				idcard = #{idCard}
			</otherwise>
		</choose>
	</select>
	
	<!-- 旅行社操作SQL Start  -->
	<insert id="saveTravelCompany" parameterType="TravelCompany">
		insert into
		travel_company(id, name, type, code, servicephone, certificate, createTime) values (
		#{id}, #{name}, #{type}, #{code}, #{servicePhone}, #{certificate}, #{createTime})
	</insert>
	
	<update id="updateTravelCompany" parameterType="TravelCompany">
		update travel_company set name = #{name}, servicephone = #{servicePhone}, certificate = #{certificate}
		where id = #{id}
	</update>
	
	<select id="queryCompany" resultMap="travelCompany">
		select tc.*, u.*  from travel_company tc left join user u on tc.id = u.id where u.email = #{email}
	</select>
	
	<select id="queryCompanyByCode" resultMap="travelCompany">
		select tc.*, u.*  from travel_company tc left join user u on tc.id = u.id where tc.code = #{code}
	</select>
	
	<!-- 旅行社操作SQL End  -->
	
	<insert id="saveGuide" parameterType="Guide">
		insert into guide(id, avgscore, leadcount, commentcount) values (#{guideId}, #{avgScore}, #{leadCount}, #{commentCount})
	</insert>
	
	<update id="updateGuide" parameterType="Guide">
		update guide set avgscore = #{avgScore}, leadcount = #{leadCount}, commentcount = #{commentCount}
		where id = #{guideId}
	</update>
	
	<update id="updateGuideDetail" parameterType="Guide">
		update guide set guide_idcard=#{guideIdcard} where id = #{guideId}
	</update>
	
	<select id="queryGuideById" resultMap="guide">
		select distinct u.*, g.*, if(gt.team_id is null, 0, 1) as status from user u inner join guide g on u.id = g.id
		left join (
		select tg.guide_id, tg.team_id from team_guide tg inner join trip_team tt on tg.team_id=tt.id inner join trip t on tt.trip_id=t.id 
		where (date_add(tt.date, interval t.days - 1 day) &gt;= curdate() and curdate() &gt;= tt.date) and tg.guide_id = #{guideId}) gt on g.id = gt.guide_id
		where g.id = #{guideId}
	</select>
	
	<insert id="saveTourist" parameterType="Tourist">
		insert into tourist(id, appuser) values (#{touristId}, #{appUser})
	</insert>
	
	<update id="updateTourist" parameterType="Tourist">
		update tourist set appuser = #{appUser} where id = #{touristId}
	</update>
	
	<insert id="saveTeamTourist" parameterType="TeamTourist">
		insert into tourist_tripteam(tourist_id, tripteam_id,company_id, createTime) values (#{touristId}, #{tripTeamId}, #{companyId}, #{createTime})
	</insert>
	
	<select id="queryTeamTourist"  resultMap="teamTourist">
		select * from tourist_tripteam where tourist_id = #{touristId} and tripteam_id = #{tripTeamId}
	</select>
	
	<select id="queryTouristByUserName"  resultMap="tourist">
		select *  from user u where u.username=#{userName}
	</select>
	
	<select id="queryTouristById"  resultMap="tourist">
		select u.*, t.* from user u inner join tourist t on u.id = t.id where t.id = #{touristId}
	</select>
	
	
	<!-- 查询公司所有旅客 -->
	<select id="queryTourists" resultMap="tourist">
		select distinct u.*, t.appuser from user u inner join tourist t on u.id = t.id inner join tourist_tripteam tt1 on t.id = tt1.tourist_id 
		inner join trip_team tt2 on tt1.tripteam_id = tt2.id where 1=1 
		<if test="search != null and search != '' ">  
	        and ( u.realname like "%"#{search}"%"  or  u.phone like "%"#{search}"%"  or u.idcard like "%"#{search}"%" or u.remark like "%"#{search}"%" )
	    </if>
	    <if test="appUser != null and appUser != '' ">  
	        and t.appuser=#{appUser}    
	    </if> 
		<if test="tripTeamId != null and tripTeamId != '' ">  
	        and tt2.id = #{tripTeamId}   
	    </if> 
	    <if test="companyId != null and companyId != '' "> 
			and tt2.company_id = #{companyId}
		</if>
		order by convert(u.realname using gbk) collate gbk_chinese_ci asc 
	</select>
	
	<!-- 查询公司所有旅客 
	<select id="queryTourists" resultMap="tourist">
		select distinct u.*, t.appuser from user u inner join tourist t on u.id = t.id inner join company_tourist tt1 on t.id = tt1.tourist_id where 1=1 
		<if test="search != null and search != '' ">  
	        and ( u.realname like "%"#{search}"%"  or  u.phone like "%"#{search}"%"  or u.idcard like "%"#{search}"%" or u.remark like "%"#{search}"%" )
	    </if>
	    <if test="appUser != null and appUser != '' ">  
	        and t.appuser=#{appUser}    
	    </if> 
		<if test="tripTeamId != null and tripTeamId != '' ">  
	        and tt2.id = #{tripTeamId}   
	    </if> 
	    <if test="companyId != null and companyId != '' "> 
			and tt2.company_id = #{companyId}
		</if>
		order by convert(u.realname using gbk) collate gbk_chinese_ci asc 
	</select>-->
	
	<select id="queryTouristsCountByTeam"  resultType="java.lang.Integer">
		select count(tourist_id) as total from tourist_tripteam where tripteam_id = #{tripTeamId}	
	</select>
	<!-- 查询公司所有导游 -->
	<select id="queryGuides" resultMap="guide">
		select distinct ifnull(gs.avgscore, 0) as avgscore, ifnull(g.leadcount, 0) as leadcount, if(gt.team_id is null, 0, 1) as status, u.id, u.realname, u.phone, u.pic_url, cg.company_id 
		from user u inner join guide g on u.id = g.id inner join company_guide cg on cg.guide_id = g.id 
		left join 
		(select sum(score)/count(score) as avgscore, c.guide_id from guide_comments c where c.company_id=#{companyId} group by  c.guide_id) gs on g.id = gs.guide_id 
		left join (
		select tg.guide_id, tg.team_id from team_guide tg inner join trip_team tt on tg.team_id=tt.id inner join trip t on tt.trip_id=t.id 
		where (date_add(tt.date, interval t.days - 1 day) &gt;= curdate() and curdate() &gt;= tt.date) and tt.company_id = #{companyId}) gt on g.id = gt.guide_id
		where 
		<if test="realName != null and realName != ''">
			( u.realname like "%"#{realName}"%" or u.phone like "%"#{realName}"%" ) and 
		</if>
		cg.company_id = #{companyId} order by 
		<if test="orderType != null and orderType != '' and orderType != 0">
			convert(u.realname using gbk) collate gbk_chinese_ci asc,
		</if>
		cg.createTime desc
	</select>
	
	<select id="queryGuideByTrip" resultMap="guide">
		select g.*,u.* from guide g inner join user u on g.id=u.id inner join team_guide tg on g.id = tg.guide_id 
		where tg.team_id = #{tripTeamId}
	</select>
	
	<delete id="deleteTeamGuide">
		delete from team_guide where guide_id = #{guideId} and team_id = #{teamId}
	</delete>
	
	<delete id="deleteTeamTourist">
		delete from tourist_tripteam where tourist_id = #{touristId} and tripteam_id = #{teamId}
	</delete>
	
	
	<insert id="addGuide" parameterType="CompanyGuide">
		insert into company_guide values (#{companyId}, #{guideId}, #{createTime},#{coupon})
	</insert>
	
	<select id="findCompanyGuide" resultMap="companyGuide" parameterType="CompanyGuide">
		select * from company_guide where company_id=#{companyId} and guide_id=#{guideId}
	</select>
	
	<!-- 查询公司所有导游 -->
	<select id="queryCompanyByGuide" resultType="int">
		SELECT count(*) FROM company_guide c where guide_id=#{guideId}
	</select>
	
	<select id="queryCompanyById" resultMap="travelCompany">
		select u.id, u.username, u.email, u.realname, u.phone, tc.code, tc.servicephone, tc.certificate, tc.name, tc.createTime 
		from user u inner join travel_company tc on u.id = tc.id 
		where u.id = #{companyId};
	</select>
	
	<update id="updateCompany"  parameterType="TravelCompany">
		update travel_company set name = #{name}, servicephone = #{servicePhone}, certificate = #{certificate}
		where id = #{id}
	</update>
	
	<update id="updateTouristReward"  parameterType="TeamTourist">
		update tourist_tripteam tt set tt.reward=#{reward} where tt.tourist_id=#{touristId} and tt.tripteam_id=#{tripTeamId}
	</update>
	
	<update id="updateGuideReward"  parameterType="CompanyGuide">
		update company_guide cg set coupon=cg.coupon+#{coupon} where company_id=#{companyId} and guide_id=#{guideId}
	</update>
	
	<select id="queryTouristCoupons" resultType="int">
		SELECT sum(coupon) FROM company_tourist c where tourist_id=#{touristId}
		<if test="companyId != null and companyId != ''">
			and company_id=#{companyId}
		</if>
	</select>
	
	<select id="queryTeamTouristCoupons" resultType="int">
		select ifnull(reward, 0)  as coupon  FROM tourist_tripteam c where tourist_id=#{touristId} and tripteam_id=#{tripTeamId}
	</select>
	
	<select id="queryGuideCoupons" resultType="int">
		SELECT sum(coupon) FROM company_guide c where c.guide_id=#{guideId}
	</select>
	
	
	<insert id="saveCompanyTourist" parameterType="CompanyTourist">
		insert into  company_tourist values(#{companyId},#{touristId},#{coupon})
	</insert>
	
	<select id="queryCompanyTourist" resultMap="companyTourist">
		select * from  company_tourist where company_id=#{companyId} and tourist_id=#{touristId}
	</select>
	
	<update id="updateCompanyTourist"  parameterType="CompanyTourist">
		update company_tourist c set c.coupon=c.coupon+#{coupon} where c.company_id=#{companyId} and c.tourist_id=#{touristId}
	</update>
	
	<select id="queryGuideParise" resultType="int">
		SELECT count(*) FROM newland.guide_comments g where praise=1 and guide_id=#{guideId}
	</select>
	
	
</mapper>
